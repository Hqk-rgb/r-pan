spring:
    application:
        name: server
#  redis:
#    database: 1
#    host: 127.0.0.1
    output:
        ansi:
            enabled: always
    mvc:
        servlet:
            load-on-startup: 1
    servlet:
        multipart:
            max-file-size: 3072MB
            max-request-size: 3072MB
  # 配置数据库连接和 mybatis-plus
    datasource:
        username: root
        password: 123456
        url: jdbc:mysql://127.0.0.1:3306/r_pan?characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
    cloud:
        stream:
            rocketmq:
                binder:
                    name-server: 127.0.0.1:9876
            bindings:
                testInput:
                    destination: testTopic
                    group: testTopicGroup1
                testOutput:
                    destination: testTopic
                errorLogInput:
                    destination: errorLogTopic
                    group: errorLogGroup
                deleteFileInput:
                    destination: deleteFileTopic
                    group: deleteFileGroup
                fileRestoreInput:
                    destination: fileRestoreTopic
                    group: fileRestoreGroup
                physicalDeleteFileInput:
                    destination: physicalDeleteFileTopic
                    group: physicalDeleteFileGroup
                userSearchInput:
                    destination: userSearchTopic
                    group: userSearchGroup
                errorLogOutput:
                    destination: errorLogTopic
                deleteFileOutput:
                    destination: deleteFileTopic
                fileRestoreOutput:
                    destination: fileRestoreTopic
                physicalDeleteFileOutput:
                    destination: physicalDeleteFileTopic
                userSearchOutput:
                    destination: userSearchTopic

mybatis-plus:
    mapper-locations: classpath:mappers/**/*.xml

server:
    port: 8082

management:
    endpoints:
        web:
            exposure:
                include: '*'
                exclude: env,beans
swagger2:
    show: true
    group-name: ${spring.application.name}
    base-package: com.whf
    title: r-pan-server docs
    description: 分布式网盘接口文档
    terms-of-service-url: http://127.0.0.1:${server.port}
    contact-name: 王瀚锋
    contact-url: https://github.com/Hqk-rgb
    contact-email: whfplus7@163.com
    version: 1.0

logging:
    file: D:\logs\${spring.application.name}\${spring.application.name}.log
    level:
        root: INFO
# 修改 ip 地址
#com:
#  whf:
#    pan:
#      storage:
#        engine:
##          fdfs:
##            connect-timeout: 600
##            tracker-list:
##              - ip:端口
##            group: group1
#          oss:
#            bucket-name: xxxxxxxxx
#            endpoint: xxxxxxxxx
#            access-key-id: xxxxxxxxx
#            access-key-secret: xxxxxxxxx
#            auto-create-bucket: true
com:
    whf:
        pan:
  #      storage:
  #          engine:
  #              oss:
  #                bucket-name: pan-whf-bucket
  #                endpoint: oss-cn-shanghai.aliyuncs.com
  #                access-key-id: LTAI5tPr81ofKDqjFNPcCRqM
  #                access-key-secret: e9rsuHOJunSIjhRiZomOxIkiETcEt4
  #                auto-create-bucket: true
            server:
                share-prefix: http://127.0.0.1:5173/share
            bloom:
                filter:
                    local:
                        items:
                            -   name: SHARE_SIMPLE_DETAIL
                                funnel-type-name: LONG
                                expected-insertions: 10000000
                                fpp: 0.01